# Main file for printing num_events for a particuar dataset

def main(): 
    """
    Main function for finding and displaying window frames 
    corresponding to all the different social behaviors.
    """
    idx = 0
    
    # Initialize notebook
    workbook = xlsxwriter.Workbook('6_week_old_pairs_dark.xlsx')  
    sheet1 = workbook.add_worksheet('Sheet 1')

    # Headers 
    sheet1.write('A1', 'Dataset') 
    sheet1.write('B1', 'circling')
    sheet1.write('C1', 'none')
    sheet1.write('D1', 'one')
    sheet1.write('E1', 'both')
    sheet1.write('F1', 'any')
    sheet1.write('G1', 'head-body')
    sheet1.write('H1', 'tail-rub')

    dir = 'C:\\Users\\KN\\Desktop\\Parthasarathy Lab\\Datasets\\6 week old - pairs in the dark'

    for (root, dirs, files) in os.walk(dir, topdown=True):
        for name in files:
            dataset = os.path.join(root, name)
            dataset_name = re.search('\d[a-z]+_[a-z]+\d', dataset).group()

            pos_data = load_data(dataset, 3, 5)
            angle_data = load_data(dataset, 5, 6)
            contact_x = load_data(dataset, 6, 16)
            contact_y = load_data(dataset, 16, 26)

            fish1_pos = pos_data[0]
            fish2_pos = pos_data[1]
            fish1_angle_data = angle_data[0]
            fish2_angle_data = angle_data[1]
            fish1_contact_x = contact_x[0]
            fish2_contact_x = contact_x[1]
            fish1_contact_y = contact_y[0]
            fish2_contact_y = contact_y[1]

            # End of array should be the same for all loaded data
            # end_of_arr = np.shape(pos_data)[1] 
            end_of_arr = 15000
            
            # Circling 
            circling = get_circling_wf(fish1_pos, fish2_pos, fish1_angle_data, 
            fish2_angle_data, end_of_arr, params["circ_ws"], params["circ_rad"], 
            params["circ_rmse"], params["circ_anti_low"], params["circ_anti_high"],
            params["circ_head_dist"])
            

            # 90-degrees 
            orientation_dict = get_90_deg_wf(fish1_pos, fish2_pos, fish1_angle_data, 
            fish2_angle_data, end_of_arr, params["90_ws"], params["theta_90_thresh"], 
            params["90_head_dist"])
            none = orientation_dict["none"]
            one = orientation_dict["1"]
            both = orientation_dict["both"]
        
            # Any contact
            contact_wf = get_contact_wf(fish1_contact_x, fish2_contact_x, 
            fish1_contact_y, fish2_contact_y, end_of_arr, params["contact_ws"], 
            params["contact_dist"])
            any = contact_wf["any"]
            head_body = contact_wf["head-body"]

            # Tail-rubbing
            tail_rubbing= get_tail_rubbing_wf(contact_x[0], contact_x[1], 
            contact_y[0], contact_y[1], fish1_pos, fish2_pos, fish1_angle_data, 
            fish2_angle_data, end_of_arr, params["tail_rub_ws"], params["tail_dist"], 
            params["tail_anti_low"], params["tail_anti_high"], params["tail_rub_head_dist"])

            sheet1.write(f'A{idx+2}', str(dataset_name))

            sheet1.write(f'B{idx+2}', f"{np.size(circling)}".center(17))
            sheet1.write(f'C{idx+2}', f"{np.size(none)}".center(17))
            sheet1.write(f'D{idx+2}', f"{np.size(one)}".center(17))
            sheet1.write(f'E{idx+2}', f"{np.size(both)}".center(17))
            sheet1.write(f'F{idx+2}', f"{np.size(any)}".center(17))
            sheet1.write(f'G{idx+2}', f"{np.size(head_body)}".center(17))
            sheet1.write(f'H{idx+2}', f"{np.size(tail_rubbing)}".center(17))

            idx += 1

    workbook.close() 
